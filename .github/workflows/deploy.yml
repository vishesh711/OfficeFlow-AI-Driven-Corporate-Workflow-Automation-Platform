name: Deploy to Production

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  PNPM_VERSION: 8.15.0
  NODE_VERSION: 18

jobs:
  deploy-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        continue-on-error: true
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        continue-on-error: true
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
          
      - name: Configure kubeconfig
        run: |
          if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            aws eks update-kubeconfig --name officeflow-cluster --region ${{ secrets.AWS_REGION }}
          else
            echo "AWS credentials not configured, skipping kubeconfig setup"
          fi
        
      - name: Deploy to Kubernetes
        run: |
          chmod +x scripts/k8s-deploy.sh
          ./scripts/k8s-deploy.sh
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
          IMAGE_TAG: ${{ github.sha }}
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/workflow-engine -n officeflow
          kubectl rollout status deployment/auth-service -n officeflow
          kubectl get pods -n officeflow

  deploy-monitoring:
    name: Deploy Monitoring Stack
    runs-on: ubuntu-latest
    needs: [deploy-k8s]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        continue-on-error: true
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
          
      - name: Deploy monitoring
        run: |
          chmod +x scripts/deploy-monitoring.sh
          ./scripts/deploy-monitoring.sh

  notify:
    name: Send Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-k8s, deploy-monitoring]
    if: always()
    
    steps:
      - name: Send Slack notification
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment to ${{ github.event.inputs.environment || 'production' }} ${{ job.status }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

